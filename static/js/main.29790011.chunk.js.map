{"version":3,"sources":["models/people.ts","hooks/usePeople.ts","context/theme.tsx","hooks/useTheme.ts","components/PersonItem/PersonItem.tsx","components/DetailsModal/PersonHeader.tsx","components/DetailsModal/DisplayPerson.tsx","components/DetailsModal/DetailsModal.tsx","hooks/useKeyboardEvent.ts","components/ToggleButton/ToggleButton.tsx","components/SearchInput/SearchInput.tsx","components/ListHeader/ListHeader.tsx","components/Loader/Loader.tsx","components/PeopleList/NetworkError.tsx","hooks/useFuzzySearch.ts","hooks/useDebounce.ts","components/PeopleList/PeopleList.tsx","hooks/useToggledState.ts","App.tsx","serviceWorker.ts","index.tsx","hooks/useLocalStorageState.ts"],"names":["comparePeople","p1","p2","p1FullName","name","first","last","p2FullName","localeCompare","ENDPOINT","ThemeContextValue","React","createContext","theme","setTheme","toggleTheme","themed","classes","useTheme","useContext","PersonItem","props","person","onItemClick","picture","firstName","lastName","className","href","onClick","event","preventDefault","src","medium","alt","BackButton","xmlns","width","height","viewBox","d","PersonHeader","closeModal","large","login","username","LocationIcon","EmailIcon","PhoneIcon","PersonInfo","location","email","cell","city","state","country","DisplayPerson","Modal","posed","div","enter","x","transition","duration","exit","Shade","button","opacity","DetailsModel","eventCallbacks","isOpen","toggleModal","selectedPerson","keyHandler","useCallback","e","Escape","useEffect","handler","key","document","addEventListener","removeEventListener","swipeHandler","handlers","useSwipeable","onSwipedRight","animateOnMount","LightIcon","DarkIcon","ToggleButton","checked","onChange","type","ClearButton","SearchInput","searchTerm","setSearchTerm","autoFocus","placeholder","value","target","length","ListHeader","Loader","NetworkError","message","options","shouldSort","threshold","distance","maxPatternLength","minMatchCharLength","keys","useFuzzySearch","people","term","useState","Fuse","fuse","setFuse","result","setResult","debouncedTerm","delay","debouncedValue","setDebouncedValue","setTimeout","Promise","resolve","then","clearTimeout","useDebounce","termsToSearch","split","filter","normalizedResults","idx","removeDuplicatedPeople","map","t","search","flat","sort","PeopleContainer","visible","y","hidden","PeopleList","setPeople","fetching","setFetching","error","setError","_fetchData","a","axios","get","data","results","fetchData","usePeople","filteredPeople","setSelectedPerson","initialValue","setValue","useToggledState","toggleModalWithData","pose","uuid","App","Boolean","window","hostname","match","ReactDOM","render","children","item","localStorage","getItem","JSON","parse","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","warn","useLocalStorageState","themeHandler","Provider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29790011.chunk.js","sourcesContent":["export interface Person {\n    gender: string;\n    name: { title: string; first: string; last: string };\n    location: {\n        street: { number: number; name: string };\n        city: string;\n        state: string;\n        country: string;\n        postcode: number;\n        coordinates: { latitude: string; longitude: string };\n        timezone: {\n            offset: string;\n            description: string;\n        };\n    };\n    email: string;\n    login: {\n        uuid: string;\n        username: string;\n        password: string;\n        salt: string;\n        md5: string;\n        sha1: string;\n        sha256: string;\n    };\n    dob: { date: string; age: number };\n    registered: { date: string; age: number };\n    phone: string;\n    cell: string;\n    id: { name: string; value: string };\n    picture: {\n        large: string;\n        medium: string;\n        thumbnail: string;\n    };\n    nat: string;\n}\n\nexport interface APIResult {\n    results: Person[];\n}\n\nexport const comparePeople = (p1: Person, p2: Person): number => {\n    const p1FullName = `${p1.name.first} ${p1.name.last}`;\n    const p2FullName = `${p2.name.first} ${p2.name.last}`;\n\n    return p1FullName.localeCompare(p2FullName);\n};\n\n/*\n *   Assumes the array is sorted by the 'comparePeople' function, just to be quicker.\n *   We'll remove people with the same full name.\n */\nexport const removeDuplicatedPeople = (people: Person[]): Person[] => {\n    return people.filter((person: Person, idx: number): boolean => {\n        // The first one can't be duplicated!\n        if (idx === 0) {\n            return true;\n        }\n\n        const p1FullName = `${person.name.first} ${person.name.last}`;\n        const p2FullName = `${people[idx - 1].name.first} ${people[idx - 1].name.last}`;\n\n        return p1FullName !== p2FullName;\n    });\n};\n","import { useEffect, useState, useCallback } from 'react';\nimport { Person, APIResult, comparePeople } from '../models/people';\nimport axios from 'axios';\n\nconst ENDPOINT: string =\n    'https://randomuser.me/api/?seed=peoplefinder&results=100';\n\ninterface PeopleFetch {\n    people: Person[];\n    fetching: boolean;\n    error: string | null;\n}\n\nexport const usePeople = (): PeopleFetch => {\n    const [people, setPeople] = useState<Person[]>([]);\n    const [fetching, setFetching] = useState<boolean>(true);\n    const [error, setError] = useState<string | null>(null);\n\n    const _fetchData = async (): Promise<void> => {\n        try {\n            const { data } = await axios.get<APIResult>(ENDPOINT);\n\n            setFetching(false);\n            setPeople(data.results.sort(comparePeople));\n        } catch (err) {\n            setFetching(false);\n            setError(`Network Error`);\n        }\n    };\n\n    const fetchData = useCallback(_fetchData, [ENDPOINT]);\n\n    useEffect(() => {\n        fetchData();\n    }, [fetchData]);\n\n    return { people, fetching, error };\n};\n","import React from 'react';\nimport { useLocalStorageState } from '../hooks/useLocalStorageState';\n\nexport type Theme = 'dark' | 'light';\n\nexport interface ThemeContext {\n    theme: Theme;\n    setTheme: (theme: Theme) => void;\n    toggleTheme: () => void;\n    themed: (classes: string) => string;\n}\n\n// Default context, we won't reach this point cause this context will be provided at App level\nconst voidContext: ThemeContext = {\n    theme: 'light',\n    setTheme: theme => {},\n    toggleTheme: () => {},\n    themed: classes => `${classes} light`,\n};\n\nexport const ThemeContextValue = React.createContext<ThemeContext>(voidContext);\n\nexport const ThemeProvider: React.FC = ({ children }) => {\n    const [theme, setTheme] = useLocalStorageState<Theme>(\n        'people-finder-theme',\n        'light'\n    );\n\n    const toggleTheme = (): void => {\n        setTheme(theme === 'dark' ? 'light' : 'dark');\n    };\n\n    const themed = (classes: string) => {\n        return `${classes} ${theme}`;\n    };\n\n    const themeHandler: ThemeContext = {\n        theme,\n        setTheme,\n        toggleTheme,\n        themed,\n    };\n\n    return (\n        <ThemeContextValue.Provider value={themeHandler}>\n            {children}\n        </ThemeContextValue.Provider>\n    );\n};\n","import { useContext } from 'react';\nimport { ThemeContextValue, ThemeContext } from '../context/theme';\n\nexport const useTheme = (): ThemeContext => {\n    return useContext<ThemeContext>(ThemeContextValue);\n}","import React from 'react';\nimport { Person } from '../../models/people';\nimport { useTheme } from '../../hooks/useTheme';\n\nimport './PersonItem.scss';\n\ninterface Props {\n    person: Person;\n    onItemClick: (person: Person) => void;\n}\n\nexport const PersonItem: React.FC<Props> = (props: Props) => {\n    const { person, onItemClick } = props;\n    const { picture, name } = person;\n    const { first: firstName, last: lastName } = name;\n\n    const { themed } = useTheme();\n\n    const onClick: React.MouseEventHandler = (event: React.MouseEvent) => {\n        onItemClick(person);\n        event.preventDefault();\n    };\n\n    return (\n        <div className=\"person-item-container\">\n            <a\n                href=\"/\"\n                onClick={onClick}\n                className={themed('person-item-link')}\n            >\n                <img\n                    src={picture.medium}\n                    alt={`${firstName} ${lastName} thumbnail`}\n                />\n                <span className={themed('person-name')}>\n                    {firstName} {lastName}\n                </span>\n            </a>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Person } from '../../models/people';\n\nimport './PersonHeader.scss';\n\ninterface ButtonProps {\n    onClick: () => void;\n}\n\nconst BackButton: React.FC<ButtonProps> = ({ onClick }) => {\n    return (\n        <button onClick={onClick} className=\"back-button\">\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"32px\"\n                height=\"32px\"\n                viewBox=\"0 0 24 24\"\n            >\n                <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n            </svg>\n        </button>\n    );\n};\n\ninterface HeaderProps {\n    person: Person;\n    closeModal: () => void;\n}\n\nexport const PersonHeader: React.FC<HeaderProps> = props => {\n    const { person, closeModal } = props;\n\n    return (\n        <div className=\"person-header-container\">\n            <BackButton onClick={closeModal} />\n            <div className=\"header-image-background-container\">\n                <img\n                    className=\"header-image-background\"\n                    alt=\"Header background\"\n                    src={person.picture.large}\n                />\n            </div>\n\n            <div className=\"basic-description-container\">\n                <div className=\"header-image-container\">\n                    <img\n                        className=\"header-image\"\n                        alt=\"Header\"\n                        src={person.picture.large}\n                    />\n                </div>\n                <h1>\n                    {person.name.first} {person.name.last}\n                </h1>\n                <p>@{person.login.username}</p>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Person } from '../../models/people';\nimport { useTheme } from '../../hooks/useTheme';\nimport { PersonHeader } from './PersonHeader';\n\nimport './DisplayPerson.scss';\n\nconst LocationIcon: React.FC = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 10.9c-.61 0-1.1.49-1.1 1.1s.49 1.1 1.1 1.1c.61 0 1.1-.49 1.1-1.1s-.49-1.1-1.1-1.1zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm2.19 12.19L6 18l3.81-8.19L18 6l-3.81 8.19z\" />\n    </svg>\n);\n\nconst EmailIcon: React.FC = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\" />\n    </svg>\n);\n\nconst PhoneIcon: React.FC = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M20.01 15.38c-1.23 0-2.42-.2-3.53-.56-.35-.12-.74-.03-1.01.24l-1.57 1.97c-2.83-1.35-5.48-3.9-6.89-6.83l1.95-1.66c.27-.28.35-.67.24-1.02-.37-1.11-.56-2.3-.56-3.53 0-.54-.45-.99-.99-.99H4.19C3.65 3 3 3.24 3 3.99 3 13.28 10.73 21 20.01 21c.71 0 .99-.63.99-1.18v-3.45c0-.54-.45-.99-.99-.99z\" />\n    </svg>\n);\n\ninterface InfoProps {\n    person: Person;\n}\nconst PersonInfo: React.FC<InfoProps> = props => {\n    const { themed } = useTheme();\n\n    const { person } = props;\n    const { location, email, cell } = person;\n    const { city, state, country } = location;\n\n    return (\n        <div className={themed('person-info-container')}>\n            <div className=\"info-piece\">\n                <div className=\"icon-and-heading\">\n                    <LocationIcon />\n                    <h3>Location</h3>\n                </div>\n                <p>\n                    {city}, {state}, {country}\n                </p>\n            </div>\n\n            <div className=\"info-piece\">\n                <a href={`mailto: ${email}`}>\n                    <div className=\"icon-and-heading\">\n                        <EmailIcon />\n                        <h3>Email Address</h3>\n                    </div>\n                    <p>{email}</p>\n                </a>\n            </div>\n\n            <div className=\"info-piece\">\n                <a href={`tel:${cell}`}>\n                    <div className=\"icon-and-heading\">\n                        <PhoneIcon />\n                        <h3>Phone Number</h3>\n                    </div>\n                    <p>{cell}</p>\n                </a>\n            </div>\n        </div>\n    );\n};\n\ninterface Props {\n    person: Person;\n    closeModal: () => void;\n}\n\nexport const DisplayPerson: React.FC<Props> = props => {\n    const { person, closeModal } = props;\n\n    return (\n        <div>\n            <PersonHeader person={person} closeModal={closeModal} />\n            <PersonInfo person={person} />\n        </div>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { Person } from '../../models/people';\nimport { useTheme } from '../../hooks/useTheme';\nimport { useKeyboardEvent } from '../../hooks/useKeyboardEvent';\nimport posed, { PoseGroup } from 'react-pose';\nimport { useSwipeable, EventData, SwipeableHandlers } from 'react-swipeable';\nimport { DisplayPerson } from './DisplayPerson';\n\nimport './DetailsModal.scss';\n\nconst Modal = posed.div({\n    enter: {\n        x: '0vw',\n        transition: { duration: 250 },\n    },\n    exit: {\n        x: '100vw',\n        transition: { duration: 250 },\n    },\n});\n\nconst Shade = posed.button({\n    enter: { opacity: 1 },\n    exit: { opacity: 0 },\n});\n\ninterface Props {\n    selectedPerson: Person;\n    isOpen: boolean;\n    toggleModal: () => void;\n}\n\nexport const DetailsModel: React.FC<Props> = props => {\n    const { isOpen, toggleModal, selectedPerson } = props;\n\n    const { themed } = useTheme();\n\n    const closeModal = () => {\n        toggleModal();\n    };\n\n    // Close modal when we press 'Escape'\n    const keyHandler = useCallback(\n        (e: KeyboardEvent) => {\n            if (isOpen) {\n                toggleModal();\n            }\n        },\n        [isOpen, toggleModal]\n    );\n    useKeyboardEvent({ Escape: keyHandler });\n\n    const swipeHandler = useCallback(\n        (e: EventData) => {\n            if (isOpen) {\n                toggleModal();\n            }\n        },\n        [isOpen, toggleModal]\n    );\n    const handlers: SwipeableHandlers = useSwipeable({\n        onSwipedRight: swipeHandler,\n    });\n\n    return (\n        <PoseGroup animateOnMount={true}>\n            {isOpen && [\n                <Shade\n                    onClick={closeModal}\n                    key=\"backdrop\"\n                    className={themed('modal-backdrop')}\n                />,\n\n                <Modal\n                    {...handlers}\n                    key=\"modal\"\n                    className={themed('details-modal')}\n                >\n                    {selectedPerson && (\n                        <DisplayPerson\n                            closeModal={closeModal}\n                            person={selectedPerson}\n                        />\n                    )}\n                </Modal>,\n            ]}\n        </PoseGroup>\n    );\n};\n","import { useEffect } from 'react';\n\nexport type KeyboardEventCallback = {\n    [key: string]: (e: KeyboardEvent) => void;\n};\n\nexport const useKeyboardEvent = (eventCallbacks: KeyboardEventCallback) => {\n    useEffect(() => {\n        const handler = (e: KeyboardEvent): void => {\n            if (eventCallbacks[e.key]) {\n                eventCallbacks[e.key](e);\n            }\n        };\n\n        document.addEventListener('keydown', handler);\n\n        return () => {\n            document.removeEventListener('keydown', handler);\n        };\n    }, [eventCallbacks]);\n};\n","import React from 'react';\n\nimport './ToggleButton.scss';\n\ninterface Props {\n    checked: boolean;\n    onChange: () => void;\n}\n\nconst LightIcon: React.FC = () => {\n    return (\n        <svg\n            className=\"light-theme-icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"15px\"\n            height=\"15px\"\n            viewBox=\"0 0 24 24\"\n        >\n            <path d=\"M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z\" />\n        </svg>\n    );\n};\n\nconst DarkIcon: React.FC = () => {\n    return (\n        <svg\n            className=\"dark-theme-icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"15px\"\n            height=\"15px\"\n            viewBox=\"0 0 24 24\"\n        >\n            <path d=\"M10 2c-1.82 0-3.53.5-5 1.35C7.99 5.08 10 8.3 10 12s-2.01 6.92-5 8.65C6.47 21.5 8.18 22 10 22c5.52 0 10-4.48 10-10S15.52 2 10 2z\" />\n        </svg>\n    );\n};\n\nexport const ToggleButton: React.FC<Props> = props => {\n    const { checked, onChange } = props;\n\n    return (\n        <label className=\"switch\">\n            <input checked={checked} onChange={onChange} type=\"checkbox\" />\n            <span className=\"slider round\">\n                <LightIcon />\n                <DarkIcon />\n                <div className=\"icon-background\" />\n            </span>\n        </label>\n    );\n};\n","import React from 'react';\nimport { useTheme } from '../../hooks/useTheme';\n\nimport './SearchInput.scss';\n\ninterface ClearProps {\n    onClick: () => void;\n}\nconst ClearButton: React.FC<ClearProps> = (props) => {\n    const { onClick } = props;\n    const { themed } = useTheme();\n\n    return (\n        <button className='clear-button' onClick={onClick}>\n            <svg\n                className={themed('clear-icon')}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"18px\"\n                height=\"18px\"\n                viewBox=\"0 0 24 24\"\n            >\n                <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n            </svg>\n        </button>\n    );\n};\n\ninterface Props {\n    searchTerm: string;\n    setSearchTerm: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const SearchInput: React.FC<Props> = (props) => {\n    const { searchTerm, setSearchTerm } = props;\n    const { themed } = useTheme();\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const { value } = e.target;\n        setSearchTerm(value);\n    };\n\n    const clearQuery = (): void => {\n        setSearchTerm('');\n    }\n\n    return (\n        <div className={themed('search-input-container')}>\n            <input\n                autoFocus={true}\n                placeholder=\"Search by name or surname\"\n                value={searchTerm}\n                onChange={onChange}\n                className={themed('search-input')}\n            />\n            {searchTerm.length > 0 && <ClearButton onClick={clearQuery} />}\n        </div>\n    );\n};\n","import React from 'react';\nimport { useTheme } from '../../hooks/useTheme';\nimport { ToggleButton } from '../ToggleButton/ToggleButton';\nimport { SearchInput } from '../SearchInput/SearchInput';\n\nimport './ListHeader.scss';\n\ninterface Props {\n    searchTerm: string;\n    setSearchTerm: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const ListHeader: React.FC<Props> = props => {\n    const { themed, toggleTheme, theme } = useTheme();\n\n    return (\n        <header className={themed('list-header-container')}>\n            <div className=\"title-and-theme\">\n                <h1 className={themed('list-title')}>People</h1>\n                <ToggleButton\n                    checked={theme === 'dark'}\n                    onChange={toggleTheme}\n                />\n            </div>\n            <p className={themed('list-description')}>\n                You can search for someone, no need for a perfect match!\n            </p>\n            <SearchInput {...props} />\n        </header>\n    );\n};\n","import React from 'react';\nimport { useTheme } from '../../hooks/useTheme';\n\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => {\n    const { themed } = useTheme();\n\n    return (\n        <div className={themed(\"lds-ring\")}>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { useTheme } from '../../hooks/useTheme';\n\ninterface ErrorProps {\n    message: string;\n}\n\nexport const NetworkError: React.FC<ErrorProps> = props => {\n    const { message } = props;\n    const { themed } = useTheme();\n\n    return (\n        <div className={themed('error-message-container')}>\n            <svg\n                className={themed('error-message-icon')}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"128px\"\n                height=\"128px\"\n                viewBox=\"0 0 24 24\"\n            >\n                <path d=\"M22.99 9C19.15 5.16 13.8 3.76 8.84 4.78l2.52 2.52c3.47-.17 6.99 1.05 9.63 3.7l2-2zm-4 4c-1.29-1.29-2.84-2.13-4.49-2.56l3.53 3.53.96-.97zM2 3.05L5.07 6.1C3.6 6.82 2.22 7.78 1 9l1.99 2c1.24-1.24 2.67-2.16 4.2-2.77l2.24 2.24C7.81 10.89 6.27 11.73 5 13v.01L6.99 15c1.36-1.36 3.14-2.04 4.92-2.06L18.98 20l1.27-1.26L3.29 1.79 2 3.05zM9 17l3 3 3-3c-1.65-1.66-4.34-1.66-6 0z\" />\n            </svg>\n\n            <h2 className={themed('error-title')}>Oh no!</h2>\n            <p className={themed('error-message')}>\n                Could not get people information.\n            </p>\n            <p className={themed('error-message')}>{message}</p>\n        </div>\n    );\n};","import { useState, useEffect } from 'react';\nimport Fuse from 'fuse.js';\nimport { Person, comparePeople, removeDuplicatedPeople } from '../models/people';\nimport { useDebounce } from './useDebounce';\n\nconst options = {\n    shouldSort: true,\n    threshold: 0.4,\n    location: 0,\n    distance: 100,\n    maxPatternLength: 48,\n    minMatchCharLength: 1,\n    keys: ['name.first', 'name.last'],\n};\n\nexport const useFuzzySearch = (people: Person[], term: string): Person[] => {\n    const [fuse, setFuse] = useState<Fuse<Person>>(\n        () => new Fuse<Person>(people, options)\n    );\n    const [result, setResult] = useState<Person[]>(people);\n\n    const debouncedTerm: string = useDebounce<string>(term, 150);\n\n    useEffect(() => {\n        setFuse(new Fuse<Person>(people, options));\n    }, [people]);\n\n    useEffect(() => {\n        const termsToSearch = debouncedTerm\n            .split(/\\s/)\n            .filter((term: string) => term.length > 0);\n\n        if (termsToSearch.length === 0) {\n            setResult(people);\n            return;\n        }\n\n        const mergedSearches: Person[] = termsToSearch\n            .map((t: string) => fuse.search(t))\n            .flat()\n            .sort(comparePeople);\n\n        const normalizedResults = removeDuplicatedPeople(mergedSearches);\n\n        setResult(normalizedResults);\n    }, [people, fuse, debouncedTerm]);\n\n    return result;\n};\n","import { useState, useEffect } from 'react';\n\n// Our hook\nexport const useDebounce = <T>(value: T, delay: number): T => {\n    const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n    useEffect(() => {\n        const handler: NodeJS.Timeout = setTimeout(() => {\n            // YES! This is weird, but chrome seems to hate this setState inside a setTimeout\n            // It causes a violation (>50ms handler).\n            // It works just fine if we move over to a microtask.\n            Promise.resolve(value).then(setDebouncedValue);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n","import React, { useState } from 'react';\nimport posed from 'react-pose';\nimport { usePeople } from '../../hooks/usePeople';\nimport { Person } from '../../models/people';\nimport { PersonItem } from '../PersonItem/PersonItem';\nimport { useTheme } from '../../hooks/useTheme';\nimport { DetailsModel } from '../DetailsModal/DetailsModal';\nimport { useToggledState } from '../../hooks/useToggledState';\nimport { ListHeader } from '../ListHeader/ListHeader';\nimport { Loader } from '../Loader/Loader';\nimport { NetworkError } from './NetworkError';\nimport { useFuzzySearch } from '../../hooks/useFuzzySearch';\n\nimport './PeopleList.scss';\n\nconst PeopleContainer = posed.div({\n    visible: {\n        y: '0px',\n        opacity: 1,\n        transition: { duration: 200 },\n    },\n    hidden: {\n        y: '100px',\n        opacity: 0,\n        transition: { duration: 200 },\n    },\n});\n\nexport const PeopleList: React.FC<{}> = props => {\n    const { people, fetching, error } = usePeople();\n    const [searchTerm, setSearchTerm] = useState<string>('');\n    const filteredPeople = useFuzzySearch(people, searchTerm);\n\n    const { themed } = useTheme();\n\n    const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n    const [isOpen, toggleModal] = useToggledState(false);\n    const toggleModalWithData = (person: Person) => {\n        setSelectedPerson(person);\n        toggleModal();\n    };\n\n    return (\n        <>\n            <div className={themed('people-list-container')}>\n                <ListHeader\n                    searchTerm={searchTerm}\n                    setSearchTerm={setSearchTerm}\n                />\n\n                {fetching && (\n                    <div className={themed('loader-container')}>\n                        <Loader />\n                    </div>\n                )}\n\n                {error && <NetworkError message={error} />}\n\n                <PeopleContainer\n                    pose={filteredPeople.length > 0 ? 'visible' : 'hidden'}\n                    className=\"animated-people-container\"\n                >\n                    {filteredPeople.map((person: Person) => {\n                        return (\n                            <PersonItem\n                                onItemClick={toggleModalWithData}\n                                person={{ ...person }}\n                                key={person.login.uuid}\n                            />\n                        );\n                    })}\n                </PeopleContainer>\n            </div>\n\n            {!!selectedPerson && (\n                <DetailsModel\n                    isOpen={isOpen}\n                    toggleModal={toggleModal}\n                    selectedPerson={selectedPerson}\n                />\n            )}\n        </>\n    );\n};\n","import { useState } from 'react';\n\ntype Toggler = () => void;\n\nexport const useToggledState = (initialValue: boolean): [boolean, Toggler] => {\n    const [value, setValue] = useState<boolean>(initialValue);\n\n    const toggleValue = (): void => {\n        setValue(!value);\n    }\n\n    return [value, toggleValue];\n}","import React from 'react';\nimport { PeopleList } from './components/PeopleList/PeopleList';\nimport { useTheme } from './hooks/useTheme';\nimport './App.scss';\n\nconst App: React.FC = () => {\n    const { themed } = useTheme();\n\n    return (\n        <div className={themed('app-container')}>\n            <PeopleList />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from './context/theme';\n\nReactDOM.render(\n    <ThemeProvider>\n        <App />\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { useState } from 'react';\n\nexport const useLocalStorageState = <T>(\n    key: string,\n    initialValue: T\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState<T>(() => {\n        try {\n            const item: string | null = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that persists the new value to localStorage.\n    const setValue: React.Dispatch<React.SetStateAction<T>> = (value): void => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore: T =\n                value instanceof Function ? value(storedValue) : value;\n\n            setStoredValue(valueToStore);\n\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // We'll suppose you have localstorage, if not well... Just log for now.\n            console.warn(error);\n        }\n    };\n\n    return [storedValue, setValue];\n};\n"],"sourceRoot":""}